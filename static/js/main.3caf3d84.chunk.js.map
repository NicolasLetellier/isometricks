{"version":3,"sources":["editor/toolbar/close.svg","editor/gridUtils.js","editor/toolbar/CloseDropdownButton.js","editor/toolbar/GridSize.js","editor/colorUtils.js","editor/toolbar/Palette.js","editor/toolbar/Toolbar.js","editor/frame/TrianglesGrid.js","editor/frame/Frame.js","editor/Editor.js","editor/downloadUtils.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","giveTriangleHeight","triangleEdgeLength","Math","sqrt","TRIANGLE_HEIGHT","giveTriangleOrientation","x","y","giveTriangleData","gridDimensions","orientation","xSide","x1","x2","y1","y2","TRIANGLE_EDGE_LENGTH","y3","yUp","yDown","triangleCoord","topFaceCoord","leftFaceCoord","rightFaceCoord","width","height","calculateGridDimensions","gridWidthInTriangles","gridHeightInTriangles","CloseDropdownButton","onClick","className","type","src","close","alt","GridSize","onDialog","setOnDialog","setGridDimensionsInTriangles","useState","selectedDimensions","setSelectedDimensions","closeDialog","disabled","viewBox","d","id","name","htmlFor","colorToRgbParser","cssColor","div","document","createElement","style","color","querySelector","appendChild","match","getComputedStyle","remove","parsedColor","r","g","b","a","Error","luminanceWithAlphaAndBackground","backgroundLum","lum","luminance","undefined","map","v","pow","whiteLum","Palette","selectedColors","setSelectedColors","changeFaceColor","colorInput","setColorInput","onChangingFaceColor","setOnChangingFaceColor","background","right","top","left","colorHistory","setColorHistory","contrastedTextColor","setContrastedTextColor","colorSyntaxErrorMessage","setColorSyntaxErrorMessage","changeInput","applyColor","colorTarget","trimmedColor","trim","syntaxMatch","index","cssColorSyntaxValidator","previousColors","copiedColors","Object","assign","contrastedTextRgb","rgb","error","console","log","textContrastedGrey","previousHistory","copiedHistory","slice","alreadyUsedColorIndex","findIndex","historicColor","splice","push","addToColorHistory","fill","href","target","rel","value","onChange","event","checked","backgroundColor","points","reverse","key","Toolbar","activeFace","selectActiveFace","onErasing","toggleOnErasing","backwardInHistory","forwardInHistory","buildAndSaveFile","strokeWidth","strokeLinecap","strokeLinejoin","transform","TrianglesGrid","presentation","gridDimensionsInTriangles","trianglesMap","triangleClickHandler","trianglesPolygons","triangleData","data-orientation","stroke","Frame","polygonStack","trianglesMapBuilder","gridLinesContrastedColor","gridContrastedGrey","triangleBackgroundPresentation","drawingPolygons","forEach","polygon","preserveAspectRatio","START_GRID_DIMENSIONS","Editor","setActiveFace","setOnErasing","stacksHistory","setStacksHistory","historyNavIndex","setHistoryNavIndex","useEffect","historyLastIndex","length","currentHistoryIndex","addPolygonToPreviousStack","previousStack","previousStackCopy","i","concat","actualiseStack","addNewStackToHistory","stack","slicedHistory","face","prevStateOnErasing","svgMarkup","polygonsMarkup","polygons","svgBlob","Blob","saveAs","buildAndSave","previousPolygonStack","reversedIndex","polygonPoints","eraseClickedPolygon","relatedFacePolygon","App","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3caf3d84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close.78109d26.svg\";","\n// WARNING: It is assumed that we will only use the hexagon\n// orientation that is really usefull for isometric drawings:\n// hexagons 'pointy topped', for a grid with vertical lines.\n// a LOT of calculations are extrapolated based on this assumption\n\n// Here we define this value (1) as a universal basis of the project.\n// This will help to visualize other values like svg grid dimensions\nconst TRIANGLE_EDGE_LENGTH = 1;\n\nfunction giveTriangleHeight(triangleEdgeLength) {\n  return Math.sqrt(3) / 2 * triangleEdgeLength;\n}\n\nconst TRIANGLE_HEIGHT = giveTriangleHeight(TRIANGLE_EDGE_LENGTH);\n\n// Coordinate system:\n// starts at 0, 0 (top left)\n// x (horizontal) increase to the right\n// y (vertical) increase to the bottom\n\n// (Be aware: frame viewbox is limiting visible height, grid is higher)\n\n// Give orientation of triangle, pointing to left or right\nfunction giveTriangleOrientation(x, y) {\n  // This rule works because we decided to start grid\n  // at 0,0 with a right triangle (style decision in conjunction\n  // with the viewbox limitation for fully drawable frame).\n  // Using % as we won't have negative coordinates.\n  return (x % 2 === y % 2) ? 'right' : 'left';\n}\n\n// All coordinates, triangles coordinates as well as related faces\n// coordinates, are given in this order:\n// first the most upper point (vertex), then other points\n// are indicated in the clockwise order of the points.\n// All coordinates are given in the SVG points syntax.\n// Related faces coords can not get negative values, neither values exceeding the\n// grid dimensions maximums: if the fourth point coord is out of grid,\n// drawing will be limited to the event triangle only (i.e. half of the face)\nfunction giveTriangleData(x, y, gridDimensions, orientation) {\n  // for each triangle, we need to calculate:\n\n  // two values of x: x1 and x2\n  const x1 = x * TRIANGLE_HEIGHT;\n  const x2 = x1 + TRIANGLE_HEIGHT;\n\n  // and three values of y: y1, y2 and y3\n  const y1 = y * (TRIANGLE_EDGE_LENGTH / 2);\n  const y2 = y1 + (TRIANGLE_EDGE_LENGTH / 2);\n  const y3 = y1 + TRIANGLE_EDGE_LENGTH;\n\n  // for the three related faces, we need to calculate:\n\n  // two other y values\n  const yUp = y1 - (TRIANGLE_EDGE_LENGTH / 2);\n  const yDown = y3 + (TRIANGLE_EDGE_LENGTH / 2);\n\n  // and another x value (this last x depending on triangle orientation)\n  let xSide;\n  if (orientation === 'left') {\n    xSide = x2 + TRIANGLE_HEIGHT;\n  }\n  if (orientation === 'right') {\n    xSide = x1 - TRIANGLE_HEIGHT;\n  }\n\n  // for every kind of related face, points coords MUST be ordened in only one way\n  // (first upper point then clockwise order)\n  // to enable 'repeated faces' comparisons with actualiseStack method\n\n  // to fix decimal rounding errors when xSide is just the max grid width\n  const gridWidthTolerance = TRIANGLE_EDGE_LENGTH / 100;\n\n  let triangleCoord, topFaceCoord, leftFaceCoord, rightFaceCoord;\n  if (orientation === 'left') {\n    triangleCoord = `${x2},${y1} ${x2},${y3} ${x1},${y2}`;\n    topFaceCoord = xSide > (gridDimensions.width + gridWidthTolerance) ? triangleCoord : `${x2},${y1} ${xSide},${y2} ${x2},${y3} ${x1},${y2}`;\n    leftFaceCoord = yUp < 0 ? triangleCoord : `${x1},${yUp} ${x2},${y1} ${x2},${y3} ${x1},${y2}`;\n    rightFaceCoord = yDown > gridDimensions.height ? triangleCoord : `${x2},${y1} ${x2},${y3} ${x1},${yDown} ${x1},${y2}`;\n  }\n  if (orientation === 'right') {\n    triangleCoord = `${x1},${y1} ${x2},${y2} ${x1},${y3}`;\n    topFaceCoord = xSide < 0 ? triangleCoord : `${x1},${y1} ${x2},${y2} ${x1},${y3} ${xSide},${y2}`;\n    rightFaceCoord = yUp < 0 ? triangleCoord : `${x2},${yUp} ${x2},${y2} ${x1},${y3} ${x1},${y1}`;\n    leftFaceCoord =  yDown > gridDimensions.height ? triangleCoord : `${x1},${y1} ${x2},${y2} ${x2},${yDown} ${x1},${y3}`;\n  }\n\n  return { orientation, triangleCoord, topFaceCoord, leftFaceCoord, rightFaceCoord };\n}\n\nfunction trianglesMapBuilder(gridWidthInTriangles, gridHeightInTriangles) {\n  const gridDimensions = calculateGridDimensions(gridWidthInTriangles, gridHeightInTriangles);\n\n  const map = [];\n\n  for (let x = 0; x < gridWidthInTriangles; x++) {\n    map[x] = [];\n    for (let y = 0; y < gridHeightInTriangles; y++) {\n      const orientation = giveTriangleOrientation(x, y);\n      map[x][y] = giveTriangleData(x, y, gridDimensions, orientation);\n    }\n  }\n  return map;\n}\n\nfunction calculateGridDimensions(gridWidthInTriangles, gridHeightInTriangles) {\n  const width = gridWidthInTriangles * giveTriangleHeight(TRIANGLE_EDGE_LENGTH);\n  const height = ((gridHeightInTriangles - 1) * TRIANGLE_EDGE_LENGTH / 2) + TRIANGLE_EDGE_LENGTH;\n  return {\n    width,\n    height\n  };\n}\n\nexport { trianglesMapBuilder, calculateGridDimensions, TRIANGLE_EDGE_LENGTH };\n","\nimport React from 'react';\n\nimport close from './close.svg';\nimport './CloseDropdownButton.css';\n\nfunction CloseDropdownButton({ onClick }) {\n  return (\n    <div\n      className=\"close-dropdown-button-wrapper\"\n    >\n      <button\n        className=\"close-dropdown-button\"\n        type=\"button\"\n        onClick={() => onClick()}\n      >\n        <img src={close} className=\"close-icon\" alt=\"close icon\" />\n      </button>\n    </div>\n  );\n}\n\nexport default CloseDropdownButton;\n","\nimport React, { useState } from 'react';\n\nimport CloseDropdownButton from './CloseDropdownButton';\n\nimport './GridSize.css';\n\nfunction GridSize({\n  onDialog,\n  setOnDialog,\n  setGridDimensionsInTriangles\n}) {\n  const [selectedDimensions, setSelectedDimensions] = useState(null);\n\n  function applySelection() {\n    if (selectedDimensions !== null) {\n      setGridDimensionsInTriangles(selectedDimensions);\n      setSelectedDimensions(null);\n    }\n    setOnDialog(null);\n  }\n\n  function closeDialog() {\n    if (selectedDimensions !== null) {\n      setSelectedDimensions(null);\n    }\n    setOnDialog(null);\n  }\n\n  function toogleDialog() {\n    if (onDialog === null) {\n      setOnDialog('grid size');\n    } else if (onDialog === 'grid size') {\n      closeDialog();\n    }\n  }\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        disabled={onDialog !== null && onDialog !== 'grid size'} // another dialog is opened\n        className={`grid-size toolbar-btn ${onDialog === 'grid size' && 'active'}`}\n        onClick={() => toogleDialog()}\n      >\n        <svg\n          viewBox=\"0 0 42 47.75\"\n        >\n          <path\n            d=\"m 40,47.75 c 1.104,0 2,-0.896 2,-2 v -24 c 0,-0.53 -0.211,-1.039 -0.586,-1.414 l -8,-8 C 33.039,11.961 32.53,11.75 32,11.75 H 14 c -1.104,0 -2,0.896 -2,2 v 32 c 0,1.104 0.896,2 2,2 z m -3.829,-27 H 32 V 16.579 Z M 16,15.75 h 12 v 7 c 0,1.104 0.896,2 2,2 h 8 v 19 H 16 Z\" />\n          <path\n            d=\"m 38,6 c 0,1.104 0.896,2 2,2 1.104,0 2,-0.896 2,-2 V 2 C 42,0.896 41.104,0 40,0 38.896,0 38,0.896 38,2 H 16 C 16,0.896 15.104,0 14,0 12.896,0 12,0.896 12,2 v 4 c 0,1.104 0.896,2 2,2 1.104,0 2,-0.896 2,-2\"\n          />\n          <path\n            d=\"m 0,45.75 c 0,1.104 0.896,2 2,2 h 4 c 1.104,0 2,-0.896 2,-2 0,-1.104 -0.896,-2 -2,-2 v -28 c 1.104,0 2,-0.896 2,-2 0,-1.104 -0.896,-2 -2,-2 H 2 c -1.104,0 -2,0.896 -2,2 0,1.104 0.896,2 2,2 v 28 c -1.104,0 -2,0.896 -2,2 z\" />\n        </svg>\n      </button>\n      {onDialog === 'grid size' && (\n        <div className=\"grid-size-wrapper\">\n          <div className=\"grid-size-dropdown\">\n            <CloseDropdownButton\n              onClick={closeDialog}\n            />\n            <p className=\"size-instructions\">\n              Select a size for a new <strong>empty</strong> grid:\n            </p>\n            <div className=\"radio-component\">\n              <input\n                id=\"mobile-size\"\n                type=\"radio\"\n                name=\"size\"\n                onClick={() => setSelectedDimensions({\n                  width: 16,\n                  height: 39\n                })}\n              />\n              <label htmlFor=\"mobile-size\">\n                for mobile phone (16 x 39)\n              </label>\n            </div>\n            <div className=\"radio-component\">\n              <input\n                id=\"desktop-size\"\n                type=\"radio\"\n                name=\"size\"\n                onClick={() => setSelectedDimensions({\n                  width: 46,\n                  height: 39\n                })}\n              />\n              <label htmlFor=\"desktop-size\">\n                for desktop (46 x 39)\n              </label>\n            </div>\n            <button\n              type=\"button\"\n              className=\"apply-grid-size dialog-btn\"\n              disabled={selectedDimensions === null}\n              onClick={() => applySelection()}\n            >\n              Apply\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default GridSize;\n","\n// the color input must be trimmed before (without whitespace at both end)\nfunction cssColorSyntaxValidator(colorInput) {\n  // regex source (verified and corrected): https://gist.github.com/olmokramer/82ccce673f86db7cda5e\n  /* eslint-disable-next-line no-useless-escape */\n  const cssSyntaxRegex = /(?:#(?:[0-9a-f]{2}){2,4}$|#[0-9a-f]{3}$|(?:rgba?|hsla?)\\((?:\\d+%?(?:deg|rad|grad|turn)?(?:,|\\s)+){2,3}[\\s\\/]*[\\d\\.]+%?\\)$|black$|silver$|gray$|whitesmoke$|maroon$|red$|purple$|fuchsia$|green$|lime$|olivedrab$|yellow$|navy$|blue$|teal$|aquamarine$|orange$|aliceblue$|antiquewhite$|aqua$|azure$|beige$|bisque$|blanchedalmond$|blueviolet$|brown$|burlywood$|cadetblue$|chartreuse$|chocolate$|coral$|cornflowerblue$|cornsilk$|crimson$|darkblue$|darkcyan$|darkgoldenrod$|darkgray$|darkgreen$|darkgrey$|darkkhaki$|darkmagenta$|darkolivegreen$|darkorange$|darkorchid$|darkred$|darksalmon$|darkseagreen$|darkslateblue$|darkslategray$|darkslategrey$|darkturquoise$|darkviolet$|deeppink$|deepskyblue$|dimgray$|dimgrey$|dodgerblue$|firebrick$|floralwhite$|forestgreen$|gainsboro$|ghostwhite$|goldenrod$|gold$|greenyellow$|grey$|honeydew$|hotpink$|indianred$|indigo$|ivory$|khaki$|lavenderblush$|lavender$|lawngreen$|lemonchiffon$|lightblue$|lightcoral$|lightcyan$|lightgoldenrodyellow$|lightgray$|lightgreen$|lightgrey$|lightpink$|lightsalmon$|lightseagreen$|lightskyblue$|lightslategray$|lightslategrey$|lightsteelblue$|lightyellow$|limegreen$|linen$|mediumaquamarine$|mediumblue$|mediumorchid$|mediumpurple$|mediumseagreen$|mediumslateblue$|mediumspringgreen$|mediumturquoise$|mediumvioletred$|midnightblue$|mintcream$|mistyrose$|moccasin$|navajowhite$|oldlace$|olive$|orangered$|orchid$|palegoldenrod$|palegreen$|paleturquoise$|palevioletred$|papayawhip$|peachpuff$|peru$|pink$|plum$|powderblue$|rosybrown$|royalblue$|saddlebrown$|salmon$|sandybrown$|seagreen$|seashell$|sienna$|skyblue$|slateblue$|slategray$|slategrey$|snow$|springgreen$|steelblue$|tan$|thistle$|tomato$|transparent$|turquoise$|violet$|wheat$|white$|yellowgreen$|rebeccapurple$)/i;\n\n  const syntaxMatch = colorInput.match(cssSyntaxRegex);\n\n  return (syntaxMatch && syntaxMatch.index === 0);\n}\n\n// inspired by https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\n// to be used only in the Browser!\nfunction colorToRgbParser(cssColor) {\n  const div = document.createElement('div');\n  div.id = 'for-computed-style';\n  div.style.color = cssColor;\n  document.querySelector('body').appendChild(div);\n  const match = getComputedStyle(div).color.match(/^rgba?\\s*\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(?:,\\s*(\\d\\.\\d)\\s*)?\\)$/i);\n  document.querySelector('#for-computed-style').remove();\n  if (match) {\n    // match[0] is regex complete match (e.g. \"rgb(0,0,0)\"), not regex capturing groups\n    let parsedColor = {\n      r: match[1],\n      g: match[2],\n      b: match[3]\n    };\n    if (match[4]) { // if alpha channel is present\n      parsedColor.a = match[4];\n    }\n    return parsedColor;\n  } else {\n    throw new Error(`Color ${cssColor} could not be parsed.`);\n  }\n}\n\n// to calculate (approximatively?) luminance of a color with alpha-channel\n// and placed on another background color\nfunction luminanceWithAlphaAndBackground(r, g, b , a, backgroundLum) {\n  const lum = luminance(r,g,b);\n  if (a !== undefined) {\n    return (lum * a) + (backgroundLum * (1 - a));\n  } else {\n    return lum;\n  }\n}\n\n// luminance and contrast: from https://stackoverflow.com/questions/9733288/how-to-programmatically-calculate-the-contrast-ratio-between-two-colors\n// based on https://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n\n// white (255, 255, 255) have relative luminance = 1\n// black (0, 0, 0) have relative luminance = 0\nfunction luminance(r, g, b) {\n  const a = [r, g, b].map(function (v) {\n    v /= 255;\n    return v <= 0.03928\n        ? v / 12.92\n        : Math.pow( (v + 0.055) / 1.055, 2.4 );\n  });\n  return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n}\n\n// function contrast(rgb1, rgb2) {\n//   const lum1 = luminance(rgb1[0], rgb1[1], rgb1[2]);\n//   const lum2 = luminance(rgb2[0], rgb2[1], rgb2[2]);\n//   const brightest = Math.max(lum1, lum2);\n//   const darkest = Math.min(lum1, lum2);\n//   return (brightest + 0.05) / (darkest + 0.05);\n// }\n\nconst whiteLum = luminance(255, 255, 255);\n\n// to get a grey grid that can contrast with the background color.\n// under the background there is a default layer of white to be able to calculate\n// background luminance in case alpha channel is present in background color\nfunction gridContrastedGrey(cssColor) {\n  let rgb;\n  try {\n    rgb = colorToRgbParser(cssColor);\n  } catch (error) {\n    console.log(error);\n    // fallback: grid full white\n    return [255, 255, 255];\n  }\n  const lum = luminanceWithAlphaAndBackground(rgb.r, rgb.g, rgb.b, rgb.a, whiteLum);\n  // grey values empirically obtained by commented test below\n  return lum > 0.5 ? [137, 137, 137] : [225, 225, 225];\n}\n\n// to get a grey text that can contrast with the background color.\n// under the background there is a default layer of white to be able to calculate\n// background luminance in case alpha channel is present in background color\nfunction textContrastedGrey(cssColor) {\n  let rgb;\n  try {\n    rgb = colorToRgbParser(cssColor);\n  } catch (error) {\n    console.log(error);\n    // fallback: text full black\n    return [0, 0, 0];\n  }\n  const lum = luminanceWithAlphaAndBackground(rgb.r, rgb.g, rgb.b, rgb.a, whiteLum);\n  // grey values empirically obtained by commented test below\n  return lum > 0.5 ? [108, 108, 108] : [237, 237, 237];\n}\n\n// function luminanceTests() {\n//   console.log('0.85 luminance grey : ' + luminance(237, 237, 237));\n//   console.log('0.75 luminance grey : ' + luminance(225, 225, 225));\n//   console.log('0.5 luminance grey : ' + luminance(188, 188, 188));\n//   console.log('0.25 luminance grey : ' + luminance(137, 137, 137));\n//   console.log('0.15 luminance grey : ' + luminance(108, 108, 108));\n// }\n\n// function luminanceWithAlphaTest() {\n//   const testArray = [\n//     [0, 0, 0, 0],\n//     [0, 0, 0, 0.1],\n//     [0, 0, 0, 1],\n//     [255, 255, 255, 0],\n//     [255, 255, 255, 1],\n//     [200, 200, 200, 0],\n//     [200, 200, 200, 1],\n//     [200, 200, 200, 0.8],\n//     [200, 200, 200, 0.2],\n//     [50, 50, 50, 0.8],\n//     [50, 50, 50, 0.2]\n//   ];\n//   testArray.forEach((values, index) => {\n//     console.log('Test ' + (index + 1) + ' -- lum: ' + luminance(values[0], values[1], values[2]) + ' / alpha: ' + values[3] + ' / luminanceWithAlpha: ' + luminanceWithAlphaAndBackground(values[0], values[1], values[2], values[3], 1));\n//   });\n// }\n\nexport { cssColorSyntaxValidator, gridContrastedGrey, textContrastedGrey };\n","\nimport React, { useState } from 'react';\n\nimport CloseDropdownButton from './CloseDropdownButton';\n\nimport { cssColorSyntaxValidator, textContrastedGrey } from '../colorUtils';\n\nimport './Palette.css';\n\nfunction Palette({\n  onDialog,\n  setOnDialog,\n  selectedColors,\n  setSelectedColors,\n  changeFaceColor,\n}) {\n  const [colorInput, setColorInput] = useState('');\n  const [onChangingFaceColor, setOnChangingFaceColor] = useState(false);\n  // initialize colorHistory array with default start colors\n  const [colorHistory, setColorHistory] = useState([\n    selectedColors.background,\n    selectedColors.right,\n    selectedColors.top,\n    selectedColors.left\n  ]);\n  const [contrastedTextColor, setContrastedTextColor] = useState([108, 108, 108]);\n  const [colorSyntaxErrorMessage, setColorSyntaxErrorMessage] = useState(null);\n\n  function closeDialog() {\n    setOnDialog(null);\n    setColorInput('');\n    setColorSyntaxErrorMessage(null);\n    setOnChangingFaceColor(false);\n  }\n\n  function toogleDialog() {\n    if (onDialog === null) {\n      setOnDialog('palette');\n    } else if (onDialog === 'palette') {\n      closeDialog();\n    }\n  }\n\n  function changeInput(color) {\n    // if there is an error message displayed from a previous\n    // submission, remove it:\n    setColorSyntaxErrorMessage(null);\n\n    setColorInput(color);\n  }\n\n  function applyColor(color, colorTarget) {\n    if (color !== '') {\n      const trimmedColor = color.trim();\n\n      if (!cssColorSyntaxValidator(trimmedColor)) {\n        setColorSyntaxErrorMessage('incorrect color syntax');\n\n      } else {\n        // colorTarget can only be one of the selectedColors keys:\n        // left, top, right or background\n        setSelectedColors((previousColors) => {\n          const copiedColors = Object.assign({}, previousColors);\n          copiedColors[colorTarget] = trimmedColor;\n          return copiedColors;\n        })\n\n        if (colorTarget === 'background') {\n          const contrastedTextRgb = textContrastedGrey(trimmedColor);\n          setContrastedTextColor(contrastedTextRgb);\n        }\n\n        if (onChangingFaceColor) {\n          changeFaceColor(colorTarget, trimmedColor);\n          setOnChangingFaceColor(false);\n        }\n\n        addToColorHistory(color);\n\n        changeInput('');\n      }\n    }\n  }\n\n  function addToColorHistory(color) {\n    setColorHistory((previousHistory) => {\n      const copiedHistory = previousHistory.slice();\n      const alreadyUsedColorIndex = copiedHistory.findIndex(\n        (historicColor) => (color === historicColor)\n      );\n      if (alreadyUsedColorIndex !== -1) {\n        // remove color repeatedly used from the history array\n        copiedHistory.splice(alreadyUsedColorIndex, 1);\n      }\n      copiedHistory.push(color);\n      return copiedHistory;\n    });\n  }\n\n  function colorHistoryListItems() {\n    const copiedHistory = colorHistory.slice();\n    return copiedHistory.reverse().map((color) => (\n      <li\n        key={color}\n      >\n        <div\n          onClick={() => changeInput(color)}\n          className=\"color-sample\"\n          style={{\n            backgroundColor: color\n          }}\n        >\n        </div>\n        {color}\n      </li>\n    ));\n  }\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        disabled={onDialog !== null && onDialog !== 'palette'}\n        className={`palette toolbar-btn ${onDialog === 'palette' && 'active'}`}\n        onClick={() => toogleDialog()}\n      >\n        <svg\n          width=\"639.59314pt\"\n          viewBox=\"-21 -21 640.21837 635.85004\"\n          height=\"635.85004pt\">\n          <path\n            id=\"path2\"\n            d=\"m 243.63859,-16.405955 c 84.14811,-14.809817 169.02669,4.021664 239.01372,53.027116 69.99088,49.004763 116.71925,122.328819 131.5784,206.464269 14.75536,83.54686 -3.48092,167.84218 -51.349,237.35101 -47.87306,69.52557 -120.12783,116.60831 -203.43726,132.57523 -1.16293,0.2209 -2.32922,0.44249 -3.49415,0.65186 l -0.36534,0.0644 c -26.58981,4.6885 -53.73151,-2.43334 -74.52273,-19.56769 -21.1401,-17.42583 -33.4858,-43.24126 -33.87003,-70.83991 -0.0894,-6.58054 -0.80441,-13.22463 -2.12184,-19.75126 -5.37842,-26.67839 -20.75015,-50.05552 -43.28121,-65.83195 -22.52722,-15.77711 -49.75951,-22.22403 -76.66535,-18.15808 -6.58362,0.99428 -13.0723,2.59341 -19.29041,4.76078 -26.054135,9.0762 -54.54544,6.31369 -78.15071,-7.59152 -23.3154099,-13.7461 -39.32809,-36.96215 -43.93851,-63.71646 -0.20024,-1.15861 -0.39117,-2.3313 -0.57998,-3.49192 C -30.32534,265.79365 -10.79435,181.79458 38.16476,113.02947 87.093315,44.293557 160.02169,-1.6620389 243.54184,-16.388896 Z\"\n          />\n          <path\n            id=\"path899\"\n            d=\"M 532.79158,281.65801 A 79.588722,79.588722 0 0 1 430.7817,329.226 79.588722,79.588722 0 0 1 383.21371,227.21611 79.588722,79.588722 0 0 1 485.2236,179.64813 79.588722,79.588722 0 0 1 532.79158,281.65801 Z\"\n            style={{\n              fill: selectedColors.right,\n            }}\n          />\n          <path\n            id=\"path897\"\n            d=\"M 215.00468,281.65826 A 79.588722,79.588722 0 0 1 112.9948,329.22625 79.588722,79.588722 0 0 1 65.426808,227.21637 79.588722,79.588722 0 0 1 167.43669,179.64839 79.588722,79.588722 0 0 1 215.00468,281.65826 Z\"\n            style={{\n              fill: selectedColors.left,\n            }}\n          />\n          <path\n            id=\"path829-0-6\"\n            d=\"M 373.66048,123.6484 A 79.588715,79.588715 0 0 1 271.65061,171.21638 79.588715,79.588715 0 0 1 224.08263,69.206513 79.588715,79.588715 0 0 1 326.09249,21.638527 79.588715,79.588715 0 0 1 373.66048,123.6484 Z\"\n            style={{\n              fill: selectedColors.top,\n            }}\n          />\n        </svg>\n      </button>\n      {onDialog === 'palette' && (\n        <div className=\"palette-wrapper\">\n          <div className=\"palette-dropdown\">\n            <CloseDropdownButton\n              onClick={closeDialog}\n            />\n            <div className=\"color-input\">\n              <label>\n                Introduce any&nbsp;\n                <a\n                  href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\"\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  CSS color\n                </a>\n                , or pick one from history:</label>\n              <input\n                value={colorInput}\n                onChange={(event) => changeInput(event.target.value)}\n              >\n              </input>\n            </div>\n            {colorSyntaxErrorMessage && (\n              <p\n                className=\"color-syntax-error-message\"\n              >\n                {colorSyntaxErrorMessage}\n              </p>\n            )}\n            <p>And apply it to:</p>\n            <div className=\"color-change-checkbox\">\n              <input\n                type=\"checkbox\"\n                id=\"color-change\"\n                checked={onChangingFaceColor}\n                disabled={colorInput === ''}\n                onChange={() => setOnChangingFaceColor(!onChangingFaceColor)}\n              />\n              <label htmlFor=\"color-change\">color existing faces</label>\n            </div>\n            <div\n              className=\"color-targets\"\n            >\n              <div\n                style={{\n                  backgroundColor: selectedColors.background\n                }}\n              >\n                <div\n                  className=\"faces-wrapper\"\n                >\n                  <button\n                    type=\"button\"\n                    disabled={colorInput === ''}\n                  >\n                    <svg\n                      viewBox=\"0 0 0.8660 1.5\"\n                    >\n                      <polygon\n                        onClick={() => applyColor(colorInput, 'left')}\n                        points=\"0,0 0.8660,0.5 0.8660,1.5 0,1\"\n                        style={{\n                          fill: selectedColors.left,\n                        }}\n                      >\n                      </polygon>\n                    </svg>\n                    <p\n                      className=\"selected-color-text\"\n                      style={{\n                        color: `rgb(${contrastedTextColor[0]}, ${contrastedTextColor[1]}, ${contrastedTextColor[2]})`\n                      }}\n                    >\n                      {selectedColors.left}\n                    </p>\n                  </button>\n                  <button\n                    type=\"button\"\n                    disabled={colorInput === ''}\n                  >\n                    <svg\n                      viewBox=\"0 0 1.7321 1\"\n                    >\n                      <polygon\n                        onClick={() => applyColor(colorInput, 'top')}\n                        points=\"0.8660,0 1.7321,0.5 0.8660,1 0,0.5\"\n                        style={{\n                          fill: selectedColors.top,\n                        }}\n                      >\n                      </polygon>\n                    </svg>\n                    <p\n                      className=\"selected-color-text\"\n                      style={{\n                        color: `rgb(${contrastedTextColor[0]}, ${contrastedTextColor[1]}, ${contrastedTextColor[2]})`\n                      }}\n                    >\n                      {selectedColors.top}\n                    </p>\n                  </button>\n                  <button\n                    type=\"button\"\n                    disabled={colorInput === ''}\n                  >\n                    <svg\n                      viewBox=\"0 0 0.8660 1.5\"\n                    >\n                      <polygon\n                        onClick={() => applyColor(colorInput, 'right')}\n                        points=\"0.8660,0 0.8660,1 0,1.5 0,0.5\"\n                        style={{\n                          fill: selectedColors.right,\n                        }}\n                      >\n                      </polygon>\n                    </svg>\n                    <p\n                      className=\"selected-color-text\"\n                      style={{\n                        color: `rgb(${contrastedTextColor[0]}, ${contrastedTextColor[1]}, ${contrastedTextColor[2]})`\n                      }}\n                    >\n                      {selectedColors.right}\n                    </p>\n                  </button>\n                </div>\n                <button\n                  className=\"background-target\"\n                  type=\"button\"\n                  disabled={colorInput === '' || onChangingFaceColor}\n                  onClick={() => applyColor(colorInput, 'background')}\n                >\n                  <p\n                    className=\"selected-color-text\"\n                    style={{\n                      color: `rgb(${contrastedTextColor[0]}, ${contrastedTextColor[1]}, ${contrastedTextColor[2]})`\n                    }}\n                  >\n                    {`Background: ${selectedColors.background}`}\n                  </p>\n                </button>\n              </div>\n            </div>\n            <div\n              className=\"color-list\"\n            >\n              <p>\n                Palette history\n              </p>\n              <ul>\n                {colorHistoryListItems()}\n              </ul>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Palette;\n","\nimport React from 'react';\n\nimport GridSize from './GridSize';\nimport Palette from './Palette';\nimport './Toolbar.css';\n\nfunction Toolbar({\n  activeFace,\n  selectActiveFace,\n  selectedColors,\n  setSelectedColors,\n  changeFaceColor,\n  onErasing,\n  toggleOnErasing,\n  onDialog,\n  setOnDialog,\n  backwardInHistory,\n  forwardInHistory,\n  setGridDimensionsInTriangles,\n  buildAndSaveFile\n}) {\n  return (\n    <div className=\"Toolbar\">\n      <div className=\"left-buttons\">\n        <GridSize\n          onDialog={onDialog}\n          setOnDialog={setOnDialog}\n          setGridDimensionsInTriangles={setGridDimensionsInTriangles}\n        />\n        <button\n          type=\"button\"\n          disabled={onDialog !== null}\n          className=\"download toolbar-btn\"\n          onClick={() => buildAndSaveFile()}\n        >\n          <svg\n            viewBox=\"0 0 30 36\"\n          >\n            <path\n              d=\"m 28,36 c 1.104,0 2,-0.896 2,-2 V 10 C 30,9.47 29.789,8.961 29.414,8.586 l -8,-8 C 21.039,0.211 20.53,0 20,0 H 2 C 0.896,0 0,0.896 0,2 v 32 c 0,1.104 0.896,2 2,2 z M 24.171,9 H 20 V 4.829 Z M 4,4 h 12 v 7 c 0,1.104 0.896,2 2,2 h 8 V 32 H 4 Z\"\n            />\n            <path\n              d=\"m 15,27.641506 -5.033641,-3.25 m 5.033641,3.25 5.033641,-3.25 M 15,16.95101 v 10.690496\"\n              style={{\n                strokeWidth: '3.25',\n                strokeLinecap: 'round',\n                strokeLinejoin: 'round',\n              }}\n            />\n          </svg>\n        </button>\n        <button\n          type=\"button\"\n          className=\"backward toolbar-btn\"\n          disabled={backwardInHistory === null || onDialog !== null}\n          onClick={backwardInHistory}\n        >\n          <svg\n            viewBox=\"0 0 454.839 454.839\"\n          >\n            <path\n              d=\"M404.908,283.853c0,94.282-76.71,170.986-170.986,170.986h-60.526c-10.03,0-18.158-8.127-18.158-18.157v-6.053c0-10.031,8.127-18.158,18.158-18.158h60.526c70.917,0,128.618-57.701,128.618-128.618c0-70.917-57.701-128.618-128.618-128.618H122.255l76.905,76.905c8.26,8.257,8.26,21.699,0,29.956c-8.015,8.009-21.964,7.997-29.961,0L56.137,149.031c-4.001-4.001-6.206-9.321-6.206-14.981c0-5.656,2.205-10.979,6.206-14.978L169.205,6.002c7.997-8.003,21.958-8.003,29.956,0c8.26,8.255,8.26,21.699,0,29.953l-76.905,76.911h111.666C328.198,112.866,404.908,189.573,404.908,283.853z\"\n            />\n          </svg>\n        </button>\n        <button\n          type=\"button\"\n          className=\"forward toolbar-btn\"\n          disabled={forwardInHistory === null || onDialog !== null}\n          onClick={forwardInHistory}\n        >\n          <svg\n            viewBox=\"0 0 454.839 454.839\"\n          >\n            <g\n              transform=\"rotate(-180 227.41949462890625,227.45840454101562)\"\n            >\n              <path\n                d=\"m404.908004,170.994574c0,-94.332459 -76.709999,-171.07751 -170.985997,-171.07751l-60.525999,0c-10.03,0 -18.158,8.13135 -18.158,18.166717l0,6.05624c0,10.036369 8.127,18.167718 18.158,18.167718l60.525999,0c70.916999,0 128.617998,57.731881 128.617998,128.686835c0,70.954954 -57.700999,128.686835 -128.617998,128.686835l-111.666998,0l76.904999,-76.946159c8.26,-8.261419 8.26,-21.710613 0,-29.972032c-8.015,-8.013286 -21.964,-8.00128 -29.960999,0l-113.061998,113.125512c-4.001,4.003141 -6.206,9.325989 -6.206,14.989018c0,5.659027 2.205,10.984876 6.206,14.986016l113.067998,113.130514c7.997,8.007283 21.958,8.007283 29.955999,0c8.26,-8.259418 8.26,-21.710613 0,-29.969031l-76.904999,-76.952162l111.665998,0c94.275998,0 170.985997,-76.748053 170.985997,-171.078511z\"\n              />\n            </g>\n          </svg>\n        </button>\n        <button\n          type=\"button\"\n          className={`erase toolbar-btn ${onErasing && 'active'}`}\n          disabled={onDialog !== null}\n          onClick={toggleOnErasing}\n        >\n          <svg\n            viewBox=\"0 0 469.333 469.333\"\n          >\n            <path d=\"M456.833,172.237L318.167,33.439c-8.061-8.068-19.109-12.103-30.159-12.105c-11.055-0.002-22.11,4.033-30.175,12.105 L12.5,279.006C4.437,287.076,0,297.794,0,309.201c0,11.407,4.406,22.094,12.594,30.289l95.51,93.318 c10.021,9.791,23.25,15.192,37.271,15.192h71.771c14.115,0,27.417-5.464,37.479-15.4l202.208-199.972 c8.063-8.07,12.5-18.789,12.5-30.195S464.896,180.308,456.833,172.237z M224.656,402.25c-2.052,2.021-4.646,3.083-7.51,3.083 h-71.771c-2.844,0-5.417-1.042-7.458-3.042l-95.25-92.958l110.708-110.708l137.844,137.854L224.656,402.25z\"/>\n          </svg>\n        </button>\n      </div>\n      <div className=\"center-buttons\">\n        <button\n          type=\"button\"\n          disabled={onDialog !== null}\n          className={`left toolbar-btn ${activeFace === 'left' && 'active'}`}\n          onClick={() => selectActiveFace('left')}\n          >\n          <svg\n            viewBox=\"0 0 0.8660 1.5\"\n          >\n            <polygon\n              points=\"0,0 0.8660,0.5 0.8660,1.5 0,1\"\n            >\n            </polygon>\n          </svg>\n        </button>\n        <button\n          type=\"button\"\n          disabled={onDialog !== null}\n          className={`top toolbar-btn ${activeFace === 'top' && 'active'}`}\n          onClick={() => selectActiveFace('top')}\n          >\n          <svg\n            viewBox=\"0 0 1.7321 1\"\n          >\n            <polygon\n              points=\"0.8660,0 1.7321,0.5 0.8660,1 0,0.5\"\n            >\n            </polygon>\n          </svg>\n        </button>\n        <button\n          type=\"button\"\n          disabled={onDialog !== null}\n          className={`right toolbar-btn ${activeFace === 'right' && 'active'}`}\n          onClick={() => selectActiveFace('right')}\n          >\n          <svg\n            viewBox=\"0 0 0.8660 1.5\"\n          >\n            <polygon\n              points=\"0.8660,0 0.8660,1 0,1.5 0,0.5\"\n            >\n            </polygon>\n          </svg>\n        </button>\n      </div>\n      <div className=\"right-buttons\">\n        <Palette\n          onDialog={onDialog}\n          setOnDialog={setOnDialog}\n          selectedColors={selectedColors}\n          setSelectedColors={setSelectedColors}\n          changeFaceColor={changeFaceColor}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Toolbar;\n","\nimport React from 'react';\nimport './TrianglesGrid.css';\n\nfunction TrianglesGrid({\n  presentation,\n  gridDimensionsInTriangles,\n  trianglesMap,\n  triangleClickHandler\n}) {\n\n  const trianglesPolygons = [];\n  for (let x = 0; x < gridDimensionsInTriangles.width; x++) {\n    for (let y = 0; y < gridDimensionsInTriangles.height; y++) {\n      const triangleData = trianglesMap[x][y];\n\n      trianglesPolygons.push((\n        <polygon\n          key={`${x},${y}`}\n          points={triangleData.triangleCoord}\n          data-orientation={triangleData.orientation}\n          stroke={presentation.stroke}\n          strokeWidth={presentation.strokeWidth}\n          fill={presentation.fill}\n          onClick={triangleClickHandler && (\n            () => triangleClickHandler(triangleData)\n          )}\n        />\n      ));\n    }\n  }\n\n  // TO DO: check g element syntax\n  return (\n    <g className=\"TrianglesGrid\">\n      {trianglesPolygons}\n    </g>\n  );\n}\n\nexport default TrianglesGrid;\n","\nimport React from 'react';\nimport TrianglesGrid from './TrianglesGrid';\nimport { trianglesMapBuilder, calculateGridDimensions, TRIANGLE_EDGE_LENGTH } from './../gridUtils';\nimport { gridContrastedGrey } from './../colorUtils';\nimport './Frame.css';\n\n\nfunction Frame({\n  gridDimensionsInTriangles,\n  backgroundColor,\n  triangleClickHandler,\n  polygonStack\n}) {\n  const trianglesMap = trianglesMapBuilder(gridDimensionsInTriangles.width, gridDimensionsInTriangles.height);\n  const gridDimensions = calculateGridDimensions(gridDimensionsInTriangles.width, gridDimensionsInTriangles.height);\n\n  const gridLinesContrastedColor = gridContrastedGrey(backgroundColor);\n  const strokeContrastedColor = `rgb(${gridLinesContrastedColor[0]}, ${gridLinesContrastedColor[1]}, ${gridLinesContrastedColor[2]})`;\n\n  // WARNING! we must find a way to not re-render Grid when activeFace,\n  // colors or drawing history change... but is it re-rendering? to be checked\n\n  const triangleBackgroundPresentation = {\n    stroke: strokeContrastedColor,\n    strokeWidth: '0.01',\n    fill: 'transparent'\n  };\n\n  const triangleEventsPresentation = {\n    stroke: 'none',\n    fill: 'transparent'\n  };\n\n  const drawingPolygons = [];\n\n  polygonStack.forEach((polygon, index) => {\n    drawingPolygons.push((\n      <polygon\n        key={index}\n        points={polygon.points}\n        stroke=\"none\"\n        fill={polygon.fill}\n      />\n    ));\n  });\n\n  // we want the SVG viewbox to be limited to the fully drawable part of the\n  // grid: we do not want any triangle (or part of) that couldn't be colorized\n  // on the frame, and all must be colorizable with any of the three faces colors.\n  // So the viewbox cut the first half of the first triangle row and the last half\n  // of the last triangle row\n  return (\n    <div className=\"Frame\">\n      <svg\n        className=\"Frame-svg\"\n        viewBox={`0 ${TRIANGLE_EDGE_LENGTH / 2} ${gridDimensions.width} ${gridDimensions.height - TRIANGLE_EDGE_LENGTH}`}\n        preserveAspectRatio=\"xMidYMin\"\n      >\n        <rect\n          x=\"0\"\n          y=\"0\"\n          width={gridDimensions.width}\n          height={gridDimensions.height}\n          className=\"Frame-default-white-background\"\n          stroke=\"none\"\n          fill=\"white\"\n        />\n        <rect\n          x=\"0\"\n          y=\"0\"\n          width={gridDimensions.width}\n          height={gridDimensions.height}\n          className=\"Frame-background\"\n          stroke=\"none\"\n          fill={backgroundColor}\n        />\n        <TrianglesGrid\n          presentation={triangleBackgroundPresentation}\n          gridDimensionsInTriangles={gridDimensionsInTriangles}\n          trianglesMap={trianglesMap}\n        />\n        {drawingPolygons}\n        <TrianglesGrid\n          presentation={triangleEventsPresentation}\n          gridDimensionsInTriangles={gridDimensionsInTriangles}\n          trianglesMap={trianglesMap}\n          triangleClickHandler={triangleClickHandler}\n        />\n      </svg>\n    </div>\n  );\n}\n\nexport default Frame;\n","\nimport React, { useState, useEffect } from 'react';\n\nimport { buildAndSave } from './downloadUtils';\n\nimport Toolbar from './toolbar/Toolbar';\nimport Frame from './frame/Frame';\nimport './Editor.css';\n\n// default grid size on start,\n// indicated in triangles\nconst START_GRID_DIMENSIONS = {\n  width: 16,\n  height: 39\n};\n\n// default colors on start\nconst LEFT_START_COLOR = 'dodgerblue';\nconst TOP_START_COLOR = 'lightskyblue';\nconst RIGHT_START_COLOR = 'mediumblue';\nconst BACKGROUND_START_COLOR = 'white';\n\n\nfunction Editor() {\n  const [gridDimensionsInTriangles, setGridDimensionsInTriangles] = useState(START_GRID_DIMENSIONS);\n  // activeFace possible values: 'left', 'top', 'right', null (invalidate events)\n  const [activeFace, setActiveFace] = useState('left');\n  // selectedColors must be an object as {left: '', top: '', right: '', background: ''}\n  const [selectedColors, setSelectedColors] = useState({\n    left: LEFT_START_COLOR,\n    top: TOP_START_COLOR,\n    right: RIGHT_START_COLOR,\n    background: BACKGROUND_START_COLOR\n  });\n  // onErasing: boolean\n  const [onErasing, setOnErasing] = useState(false);\n  // onDialog possible values: null, 'grid size', 'palette'\n  const [onDialog, setOnDialog] = useState(null);\n  // history array of polygon stacks\n  // polygon stack: array of polygon objects to be draw\n  const [stacksHistory, setStacksHistory] = useState([[]]);\n  // historyNavIndex === null : not currently in history navigation\n  const [historyNavIndex, setHistoryNavIndex] = useState(null);\n\n  // to reset all drawing when new grid size is selected\n  useEffect(() => {\n    setStacksHistory([[]]);\n    setHistoryNavIndex(null);\n    setOnErasing(false);\n  }, [gridDimensionsInTriangles]);\n\n\n  // length shouldn't be less than 1\n  const historyLastIndex = stacksHistory.length - 1;\n\n  function currentHistoryIndex() {\n    return (historyNavIndex === null) ? historyLastIndex : historyNavIndex;\n  }\n\n  function backwardInHistory() {\n    if (historyNavIndex === null) {\n      setHistoryNavIndex(historyLastIndex - 1);\n    } else {\n      setHistoryNavIndex(historyNavIndex - 1);\n    }\n  }\n\n  function backwardInHistoryProp() {\n    if (historyLastIndex === 0 || historyNavIndex === 0) {\n      return null;\n    } else {\n      return backwardInHistory;\n    }\n  }\n\n  function forwardInHistory() {\n    if (historyNavIndex === historyLastIndex - 1) {\n      setHistoryNavIndex(null);\n    } else {\n      setHistoryNavIndex(historyNavIndex + 1);\n    }\n  }\n\n  function forwardInHistoryProp() {\n    if (historyNavIndex === null) {\n      return null;\n    } else {\n      return forwardInHistory;\n    }\n  }\n\n  // check if this face is exactly the same as an older one,\n  // and remove it because it would be exactly covered by the new one.\n  // (maybe disable this if in case of use of transparent colors for upper one??)\n  // BE CAREFULL, it won't work in comparing 'shape' coords! (if ever implemented)\n  // if exactly repeated polygons (same colors, etc...) it will give the impression\n  // when using history nav that nothing was done on this action... but necesary if\n  // some parts of other faces are between the two equals polygons (when stack order\n  // has to be corrected)\n  function actualiseStack(previousStack, polygon) {\n    let previousStackCopy = [...previousStack];\n    for (let i = 0; i < previousStackCopy.length; i++) {\n      const previousPolygonPoints = previousStackCopy[i].points;\n      if (previousPolygonPoints === polygon.points) {\n        previousStackCopy.splice(i, 1);\n        break; // no possible other repeated faces as it's always checked\n      }\n    }\n    return previousStackCopy.concat(polygon);\n  }\n\n  // add polygon to copy of previous polygon stack\n  function addPolygonToPreviousStack(polygon) {\n    const previousPolygonStack = stacksHistory[currentHistoryIndex()];\n    const actualisedPolygonStack = actualiseStack(previousPolygonStack, polygon);\n    return actualisedPolygonStack;\n  }\n\n  // truncate forward history to add new stack if currently in history navigation\n  function addNewStackToHistory(stack) {\n    const slicedHistory = stacksHistory.slice(0, currentHistoryIndex() + 1);\n    slicedHistory.push(stack);\n    setStacksHistory(slicedHistory);\n    setHistoryNavIndex(null);\n  }\n\n  // based on which face is active, return polygon related to clicked triangle\n  function relatedFacePolygon(activeFace, triangleData, selectedColors) {\n    let points; // coordinates of the polygon's points in SVG syntax (string)\n    let fill; // any css color syntax accepted (string)\n    if (activeFace === 'left') {\n      points = triangleData.leftFaceCoord;\n      fill = selectedColors.left;\n    } else if (activeFace === 'top') {\n      points = triangleData.topFaceCoord;\n      fill = selectedColors.top;\n    } else if (activeFace === 'right') {\n      points = triangleData.rightFaceCoord;\n      fill = selectedColors.right;\n    }\n\n    const polygon = {\n      type: 'face', // other will be 'shape' if ever implemented?\n      face: activeFace,\n      points,\n      fill,\n      // activeFace: needed? > probably, to tag the polygon\n      // for the feature of changing color of all similar faces at once.\n      // stroke and stroke-width: configurables too?\n    };\n    return polygon;\n  }\n\n  function eraseClickedPolygon(triangleData) {\n    const previousPolygonStack = stacksHistory[currentHistoryIndex()];\n    let previousStackCopy = [...previousPolygonStack];\n    for (let i = 0; i < previousStackCopy.length; i++) {\n      // we are first erasing faces on top of stack: checking from\n      // the final of the array\n      const reversedIndex = previousStackCopy.length - (i + 1);\n      const polygonPoints = previousStackCopy[reversedIndex].points;\n      const pointsCoincidence = polygonPoints === triangleData.leftFaceCoord\n        || polygonPoints === triangleData.topFaceCoord\n        || polygonPoints === triangleData.rightFaceCoord;\n      if (pointsCoincidence) {\n        previousStackCopy.splice(reversedIndex, 1);\n        addNewStackToHistory(previousStackCopy);\n        break; // if another face below coincide, it has to be removed with another click\n      }\n    }\n  }\n\n  function changeFaceColor(face, color) {\n    const previousPolygonStack = stacksHistory[currentHistoryIndex()];\n    const newPolygonStack = previousPolygonStack.map(polygon => {\n      if (polygon.face === face) {\n        return ({\n          ...polygon,\n          fill: color,\n        });\n      }\n      return polygon;\n    });\n    addNewStackToHistory(newPolygonStack);\n  }\n\n  function triangleClickHandler(triangleData) {\n    // activeFace set to null: inactivate any click event\n    // onDialog not null: inactivate any click event\n    if (activeFace === null || onDialog !== null) {\n      return;\n    }\n\n    if (onErasing) {\n      eraseClickedPolygon(triangleData);\n    } else { // normal behaviour, i.e. not erasing\n      const polygon = relatedFacePolygon(activeFace, triangleData, selectedColors);\n      const newStack = addPolygonToPreviousStack(polygon);\n      addNewStackToHistory(newStack);\n    }\n\n  }\n\n  function buildAndSaveFile() {\n    const displayedPolygonStack = stacksHistory[currentHistoryIndex()];\n    buildAndSave(displayedPolygonStack, gridDimensionsInTriangles, selectedColors.background);\n  }\n\n  function toggleOnErasing() {\n    setOnErasing(prevStateOnErasing => !prevStateOnErasing);\n  }\n\n  function selectActiveFace(face) {\n    setOnErasing(false);\n    setActiveFace(face);\n  }\n\n  return (\n    <div className=\"Editor\">\n      <Toolbar\n        activeFace={activeFace}\n        selectActiveFace={selectActiveFace}\n        selectedColors={selectedColors}\n        setSelectedColors={setSelectedColors}\n        changeFaceColor={changeFaceColor}\n        onErasing={onErasing}\n        toggleOnErasing={toggleOnErasing}\n        onDialog={onDialog}\n        setOnDialog={setOnDialog}\n        backwardInHistory={backwardInHistoryProp()}\n        forwardInHistory={forwardInHistoryProp()}\n        setGridDimensionsInTriangles={setGridDimensionsInTriangles}\n        buildAndSaveFile={buildAndSaveFile}\n      />\n      <Frame\n        gridDimensionsInTriangles={gridDimensionsInTriangles}\n        backgroundColor={selectedColors.background}\n        triangleClickHandler={triangleClickHandler}\n        polygonStack={stacksHistory[currentHistoryIndex()]}\n      />\n    </div>\n  );\n}\n\nexport default Editor;\n","\nimport { saveAs } from 'file-saver';\nimport { calculateGridDimensions, TRIANGLE_EDGE_LENGTH } from './gridUtils';\n\n// factor to multiply grid dimensions to get sensible pixel sizes\nconst IMAGE_SIZE_FACTOR = 30;\n\nfunction buildAndSave(polygonStack, gridDimensionsInTriangles, backgroundColor) {\n  function polygons(stack) {\n    let polygonsMarkup = '';\n\n    stack.forEach((polygon) => {\n      polygonsMarkup += `\n  <polygon points=\"${polygon.points}\" stroke=\"none\" fill=\"${polygon.fill}\" />`;\n    });\n\n    return polygonsMarkup;\n  }\n\n  const gridDimensions = calculateGridDimensions(gridDimensionsInTriangles.width, gridDimensionsInTriangles.height);\n  // as for the frame , here the viewbox limits the viewable part of the grid:\n  // the grid is higher than the viewbox.\n  const viewBox = `0 ${TRIANGLE_EDGE_LENGTH / 2} ${gridDimensions.width} ${gridDimensions.height - TRIANGLE_EDGE_LENGTH}`;\n\n  // SVG height is calculated to be proportional as viewbox height\n  const svgMarkup = `\n<svg class=\"isometricks-svg\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"${gridDimensions.width * IMAGE_SIZE_FACTOR}px\" height=\"${(gridDimensions.height - TRIANGLE_EDGE_LENGTH) * IMAGE_SIZE_FACTOR}px\" preserveAspectRatio=\"xMinYMin\" viewBox=\"${viewBox}\">\n  <polygon points=\"0,0 ${gridDimensions.width},0 ${gridDimensions.width},${gridDimensions.height} 0,${gridDimensions.height}\" stroke=\"none\" fill=\"${backgroundColor ? backgroundColor : 'white'}\" />${polygons(polygonStack)}\n</svg>\n  `;\n\n  const svgBlob = new Blob([svgMarkup], {type: \"image/svg+xml\"});\n\n  saveAs(svgBlob, 'isometricks.svg');\n}\n\nexport { buildAndSave };\n","\nimport React from 'react';\nimport Editor from './editor/Editor';\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className={'App-header'}>\n        <img src=\"isometricks_logo.svg\" className=\"App-logo\" alt=\"logo\" />\n        <a href=\"info.html\">\n          <button\n            type=\"button\"\n            className=\"info-btn\"\n          >\n            <svg\n              viewBox=\"0 0 192.01154 192.01204\"\n            >\n              <g\n                transform=\"translate(-8.9942336,-52.493976)\"\n                id=\"layer1\"\n              >\n                <path\n                  d=\"M 104.99974,52.493976 A 96.00595,96.00595 0 0 0 8.9942336,148.5 96.00595,96.00595 0 0 0 104.99974,244.50602 96.00595,96.00595 0 0 0 201.00577,148.5 96.00595,96.00595 0 0 0 104.99974,52.493976 Z m 0,16.253272 a 79.752975,79.752975 0 0 1 7.96231,0.398425 79.752975,79.752975 0 0 1 7.8822,1.191141 79.752975,79.752975 0 0 1 7.72408,1.97249 79.752975,79.752975 0 0 1 7.48895,2.733167 79.752975,79.752975 0 0 1 7.17837,3.467489 79.752975,79.752975 0 0 1 6.79597,4.167187 79.752975,79.752975 0 0 1 6.34638,4.824511 79.752975,79.752975 0 0 1 5.83324,5.433777 79.752975,79.752975 0 0 1 5.26117,5.989298 79.752975,79.752975 0 0 1 4.63745,6.484357 79.752975,79.752975 0 0 1 3.96668,6.91534 79.752975,79.752975 0 0 1 3.25613,7.27656 79.752975,79.752975 0 0 1 2.51406,7.56543 79.752975,79.752975 0 0 1 1.74563,7.77833 79.752975,79.752975 0 0 1 0.96067,7.91373 79.752975,79.752975 0 0 1 0.19998,5.64152 79.752975,79.752975 0 0 1 -0.39842,7.96178 79.752975,79.752975 0 0 1 -1.19166,7.88273 79.752975,79.752975 0 0 1 -1.97197,7.72407 79.752975,79.752975 0 0 1 -2.73369,7.48895 79.752975,79.752975 0 0 1 -3.46749,7.17786 79.752975,79.752975 0 0 1 -4.16667,6.79648 79.752975,79.752975 0 0 1 -4.82451,6.34639 79.752975,79.752975 0 0 1 -5.43429,5.83323 79.752975,79.752975 0 0 1 -5.9893,5.26118 79.752975,79.752975 0 0 1 -6.48436,4.63692 79.752975,79.752975 0 0 1 -6.91482,3.96669 79.752975,79.752975 0 0 1 -7.27656,3.25665 79.752975,79.752975 0 0 1 -7.56543,2.51354 79.752975,79.752975 0 0 1 -7.77834,1.74614 79.752975,79.752975 0 0 1 -7.91424,0.96067 79.752975,79.752975 0 0 1 -5.64152,0.19947 79.752975,79.752975 0 0 1 -7.961787,-0.39842 79.752975,79.752975 0 0 1 -7.882723,-1.19114 79.752975,79.752975 0 0 1 -7.724076,-1.97249 79.752975,79.752975 0 0 1 -7.488431,-2.73317 79.752975,79.752975 0 0 1 -7.178373,-3.46749 79.752975,79.752975 0 0 1 -6.796484,-4.16719 79.752975,79.752975 0 0 1 -6.346384,-4.82451 79.752975,79.752975 0 0 1 -5.832718,-5.43378 79.752975,79.752975 0 0 1 -5.261695,-5.98929 79.752975,79.752975 0 0 1 -4.636926,-6.48436 79.752975,79.752975 0 0 1 -3.966683,-6.91534 79.752975,79.752975 0 0 1 -3.256648,-7.27656 79.752975,79.752975 0 0 1 -2.513541,-7.56491 79.752975,79.752975 0 0 1 -1.74563,-7.77886 79.752975,79.752975 0 0 1 -0.960665,-7.91373 79.752975,79.752975 0 0 1 -0.199988,-5.64151 79.752975,79.752975 0 0 1 0.398425,-7.96179 79.752975,79.752975 0 0 1 1.191143,-7.88272 79.752975,79.752975 0 0 1 1.97249,-7.72408 79.752975,79.752975 0 0 1 2.733683,-7.48843 79.752975,79.752975 0 0 1 3.467488,-7.17837 79.752975,79.752975 0 0 1 4.166669,-6.79649 79.752975,79.752975 0 0 1 4.824513,-6.346377 79.752975,79.752975 0 0 1 5.434293,-5.833236 79.752975,79.752975 0 0 1 5.988783,-5.261176 79.752975,79.752975 0 0 1 6.484874,-4.636927 79.752975,79.752975 0 0 1 6.914824,-3.966683 79.752975,79.752975 0 0 1 7.276558,-3.256648 79.752975,79.752975 0 0 1 7.565429,-2.513541 79.752975,79.752975 0 0 1 7.778338,-1.746147 79.752975,79.752975 0 0 1 7.913727,-0.960665 79.752975,79.752975 0 0 1 5.641515,-0.199472 z\"\n                />\n                <path\n                  d=\"m 90.264317,105.80131 q 0,-6.033504 4.022339,-10.133196 4.099692,-4.099693 10.752024,-4.099693 6.65233,0 10.67467,4.099693 4.02234,4.099692 4.02234,10.133196 0,6.03351 -4.02234,10.21056 -4.02234,4.09969 -10.67467,4.09969 -6.652332,0 -10.752024,-4.09969 -4.022339,-4.17705 -4.022339,-10.21056 z m 28.233723,98.23791 q -1.77911,0.30941 -5.18262,0.85088 -3.40352,0.54147 -6.88439,0.54147 -3.48087,0 -6.26557,-0.46412 -2.784697,-0.46412 -4.718514,-1.85646 -1.856464,-1.4697 -2.862049,-3.86764 -1.005585,-2.47528 -1.005585,-6.42027 v -64.51214 q 1.779112,-0.30941 5.105277,-0.85087 3.403521,-0.54147 6.884391,-0.54147 3.48087,0 6.26556,0.46411 2.7847,0.46412 4.64117,1.93382 1.93381,1.39235 2.9394,3.86763 1.08293,2.39794 1.08293,6.34292 z\"\n                />\n              </g>\n            </svg>\n          </button>\n        </a>\n      </header>\n      <Editor />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}